syntax = "proto3";
package relay.v1;

option go_package = "github.com/abulhuman/turab-monorepo/apps/daemon/gen/relay/v1;relayv1";

message Envelope {
  string id = 1;
  string type = 2;
  string source = 3; // "extension" | "desktop" | "daemon"
  int64  ts_ms = 4;
  bytes  payload = 5; // JSON or protobuf-any if you prefer
  int64  expires_at_ms = 6;
}

message ClientEvent {
  oneof event {
    Envelope message = 1;
    Action   action = 2;
    Ack      ack    = 3;
  }
}

message ServerEvent {
  oneof event {
    Envelope message = 1;
    Ack      ack     = 2;
    Error    error   = 3;
    TokenChunk token = 4; // for LLM streaming
  }
}

message Action {
  string id = 1;
  string kind = 2; // e.g., "open_tab", "summarize", "click_selector"
  bytes  args = 3; // JSON
}

message Ack {
  string id = 1;
  string status = 2; // "ok" | "queued" | "failed"
}

message Error {
  string id = 1;
  int32 code = 2;
  string message = 3;
}

message StreamOpenAIRequest {
  string action_id = 1;
  string model = 2;
  string prompt = 3;
}

message StreamOpenAIResponse {
  string action_id = 1;
  string delta = 2; // token chunk
  bool   done = 3;
}

service Relay {
  // Full-duplex for messages & actions between clients via daemon
  rpc Stream(stream ClientEvent) returns (stream ServerEvent);

  // Convenience unaries
  rpc SendAction(Action) returns (Ack);
  rpc Publish(Envelope) returns (Ack);

  // LLM streaming triggered by desktop; tokens come via ServerEvent.token
  rpc StreamOpenAI(StreamOpenAIRequest) returns (stream StreamOpenAIResponse);
}
